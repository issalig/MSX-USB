                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (Mac OS X ppc)
                                      4 ;--------------------------------------------------------
                                      5 	.module driver
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _read_or_write_sector
                                     12 	.globl _caps_flash
                                     13 	.globl _get_device_status
                                     14 	.globl _get_device_info
                                     15 	.globl _get_lun_info
                                     16 	.globl _get_drive_config
                                     17 	.globl _get_nr_drives_boottime
                                     18 	.globl _onCallMOUNTDSK
                                     19 	.globl _init_driver
                                     20 	.globl _get_workarea_size
                                     21 	.globl _interrupt
                                     22 	.globl _get_workarea
                                     23 	.globl _read_write_disk_sectors
                                     24 	.globl _read_write_file_sectors
                                     25 	.globl _usbdisk_select_dsk_file
                                     26 	.globl _usbdisk_autoexec_dsk
                                     27 	.globl _usbdisk_init
                                     28 	.globl _hal_init
                                     29 	.globl _puts
                                     30 ;--------------------------------------------------------
                                     31 ; special function registers
                                     32 ;--------------------------------------------------------
                                     33 ;--------------------------------------------------------
                                     34 ; ram data
                                     35 ;--------------------------------------------------------
                                     36 	.area _DATA
                                     37 ;--------------------------------------------------------
                                     38 ; ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area _INITIALIZED
                                     41 ;--------------------------------------------------------
                                     42 ; absolute external ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area _DABS (ABS)
                                     45 ;--------------------------------------------------------
                                     46 ; global & static initialisations
                                     47 ;--------------------------------------------------------
                                     48 	.area _HOME
                                     49 	.area _GSINIT
                                     50 	.area _GSFINAL
                                     51 	.area _GSINIT
                                     52 ;--------------------------------------------------------
                                     53 ; Home
                                     54 ;--------------------------------------------------------
                                     55 	.area _HOME
                                     56 	.area _HOME
                                     57 ;--------------------------------------------------------
                                     58 ; code
                                     59 ;--------------------------------------------------------
                                     60 	.area _CODE
                                     61 ;driver.c:12: workarea_t* get_workarea() __z88dk_fastcall __naked
                                     62 ;	---------------------------------
                                     63 ; Function get_workarea
                                     64 ; ---------------------------------
      000000                         65 _get_workarea::
                                     66 ;driver.c:27: __endasm;
                           004045    67 	GWORK	.equ 0x4045
                           004042    68 	CALBNK	.equ 0x4042
      000000 DD E5            [15]   69 	push	ix
      000002 AF               [ 4]   70 	xor	a
      000003 08               [ 4]   71 	ex	af,af' ;'
      000004 AF               [ 4]   72 	xor	a
      000005 DD 21 45 40      [14]   73 	LD	ix,#GWORK
      000009 CD 42 40         [17]   74 	call	CALBNK
      00000C DD 6E 00         [19]   75 	ld	l,0(ix)
      00000F DD 66 01         [19]   76 	ld	h,1(ix)
      000012 DD E1            [14]   77 	pop	ix
      000014 C9               [10]   78 	ret
                                     79 ;driver.c:28: } 
                                     80 ;driver.c:36: void interrupt ()
                                     81 ;	---------------------------------
                                     82 ; Function interrupt
                                     83 ; ---------------------------------
      000015                         84 _interrupt::
                                     85 ;driver.c:41: }
      000015 C9               [10]   86 	ret
                                     87 ;driver.c:56: uint16_t get_workarea_size (uint8_t reduced_drive_count,uint8_t nr_available_drives)
                                     88 ;	---------------------------------
                                     89 ; Function get_workarea_size
                                     90 ; ---------------------------------
      000016                         91 _get_workarea_size::
                                     92 ;driver.c:62: return sizeof (workarea_t);
      000016 21 02 00         [10]   93 	ld	hl, #0x0002
                                     94 ;driver.c:63: }
      000019 C9               [10]   95 	ret
                                     96 ;driver.c:85: void init_driver (uint8_t reduced_drive_count,uint8_t nr_allocated_drives)
                                     97 ;	---------------------------------
                                     98 ; Function init_driver
                                     99 ; ---------------------------------
      00001A                        100 _init_driver::
      00001A DD E5            [15]  101 	push	ix
      00001C DD 21 00 00      [14]  102 	ld	ix,#0
      000020 DD 39            [15]  103 	add	ix,sp
                                    104 ;driver.c:91: hal_init ();
      000022 CDr00r00         [17]  105 	call	_hal_init
                                    106 ;driver.c:92: workarea_t* workarea = get_workarea();
      000025 CDr00r00         [17]  107 	call	_get_workarea
                                    108 ;driver.c:93: usbdisk_init ();
      000028 E5               [11]  109 	push	hl
      000029 CDr00r00         [17]  110 	call	_usbdisk_init
      00002C CDr00r00         [17]  111 	call	_usbdisk_autoexec_dsk
      00002F D1               [10]  112 	pop	de
      000030 CB 45            [ 8]  113 	bit	0, l
      000032 28 05            [12]  114 	jr	Z, 00102$
                                    115 ;driver.c:95: workarea->mount_mode = 2;
      000034 3E 02            [ 7]  116 	ld	a, #0x02
      000036 12               [ 7]  117 	ld	(de), a
      000037 18 0C            [12]  118 	jr	00103$
      000039                        119 00102$:
                                    120 ;driver.c:97: workarea->mount_mode = usbdisk_select_dsk_file ("/");
      000039 D5               [11]  121 	push	de
      00003A 21r6Dr00         [10]  122 	ld	hl, #___str_0
      00003D E5               [11]  123 	push	hl
      00003E CDr00r00         [17]  124 	call	_usbdisk_select_dsk_file
      000041 F1               [10]  125 	pop	af
      000042 7D               [ 4]  126 	ld	a, l
      000043 D1               [10]  127 	pop	de
      000044 12               [ 7]  128 	ld	(de), a
      000045                        129 00103$:
                                    130 ;driver.c:98: switch (workarea->mount_mode)
      000045 1A               [ 7]  131 	ld	a, (de)
      000046 FE 01            [ 7]  132 	cp	a, #0x01
      000048 28 0E            [12]  133 	jr	Z, 00105$
      00004A D6 02            [ 7]  134 	sub	a, #0x02
      00004C 20 14            [12]  135 	jr	NZ, 00106$
                                    136 ;driver.c:101: printf ("+Opened disk image\r\n");
      00004E 21r6Fr00         [10]  137 	ld	hl, #___str_2
      000051 E5               [11]  138 	push	hl
      000052 CDr00r00         [17]  139 	call	_puts
      000055 F1               [10]  140 	pop	af
                                    141 ;driver.c:102: break;
      000056 18 12            [12]  142 	jr	00108$
                                    143 ;driver.c:103: case 1:
      000058                        144 00105$:
                                    145 ;driver.c:104: printf ("+Full disk mode\r\n");
      000058 21r83r00         [10]  146 	ld	hl, #___str_4
      00005B E5               [11]  147 	push	hl
      00005C CDr00r00         [17]  148 	call	_puts
      00005F F1               [10]  149 	pop	af
                                    150 ;driver.c:105: break;
      000060 18 08            [12]  151 	jr	00108$
                                    152 ;driver.c:106: default:
      000062                        153 00106$:
                                    154 ;driver.c:107: printf ("+Using floppy disk\r\n");
      000062 21r94r00         [10]  155 	ld	hl, #___str_6
      000065 E5               [11]  156 	push	hl
      000066 CDr00r00         [17]  157 	call	_puts
      000069 F1               [10]  158 	pop	af
                                    159 ;driver.c:109: }   
      00006A                        160 00108$:
                                    161 ;driver.c:110: }
      00006A DD E1            [14]  162 	pop	ix
      00006C C9               [10]  163 	ret
      00006D                        164 ___str_0:
      00006D 2F                     165 	.ascii "/"
      00006E 00                     166 	.db 0x00
      00006F                        167 ___str_2:
      00006F 2B 4F 70 65 6E 65 64   168 	.ascii "+Opened disk image"
             20 64 69 73 6B 20 69
             6D 61 67 65
      000081 0D                     169 	.db 0x0d
      000082 00                     170 	.db 0x00
      000083                        171 ___str_4:
      000083 2B 46 75 6C 6C 20 64   172 	.ascii "+Full disk mode"
             69 73 6B 20 6D 6F 64
             65
      000092 0D                     173 	.db 0x0d
      000093 00                     174 	.db 0x00
      000094                        175 ___str_6:
      000094 2B 55 73 69 6E 67 20   176 	.ascii "+Using floppy disk"
             66 6C 6F 70 70 79 20
             64 69 73 6B
      0000A6 0D                     177 	.db 0x0d
      0000A7 00                     178 	.db 0x00
                                    179 ;driver.c:112: void onCallMOUNTDSK ()
                                    180 ;	---------------------------------
                                    181 ; Function onCallMOUNTDSK
                                    182 ; ---------------------------------
      0000A8                        183 _onCallMOUNTDSK::
                                    184 ;driver.c:114: hal_init ();
      0000A8 CDr00r00         [17]  185 	call	_hal_init
                                    186 ;driver.c:115: workarea_t* workarea = get_workarea();
      0000AB CDr00r00         [17]  187 	call	_get_workarea
                                    188 ;driver.c:116: usbdisk_init ();
      0000AE E5               [11]  189 	push	hl
      0000AF CDr00r00         [17]  190 	call	_usbdisk_init
      0000B2 E1               [10]  191 	pop	hl
                                    192 ;driver.c:117: workarea->mount_mode = usbdisk_select_dsk_file ("/");
      0000B3 01rE3r00         [10]  193 	ld	bc, #___str_7+0
      0000B6 E5               [11]  194 	push	hl
      0000B7 C5               [11]  195 	push	bc
      0000B8 CDr00r00         [17]  196 	call	_usbdisk_select_dsk_file
      0000BB F1               [10]  197 	pop	af
      0000BC 7D               [ 4]  198 	ld	a, l
      0000BD E1               [10]  199 	pop	hl
      0000BE 77               [ 7]  200 	ld	(hl), a
                                    201 ;driver.c:118: switch (workarea->mount_mode)
      0000BF 4E               [ 7]  202 	ld	c, (hl)
      0000C0 3D               [ 4]  203 	dec	a
      0000C1 28 0E            [12]  204 	jr	Z, 00102$
      0000C3 79               [ 4]  205 	ld	a, c
      0000C4 D6 02            [ 7]  206 	sub	a, #0x02
      0000C6 20 12            [12]  207 	jr	NZ, 00103$
                                    208 ;driver.c:121: printf ("+Opened disk image\r\n");
      0000C8 21rE5r00         [10]  209 	ld	hl, #___str_9
      0000CB E5               [11]  210 	push	hl
      0000CC CDr00r00         [17]  211 	call	_puts
      0000CF F1               [10]  212 	pop	af
                                    213 ;driver.c:122: break;
      0000D0 C9               [10]  214 	ret
                                    215 ;driver.c:123: case 1:
      0000D1                        216 00102$:
                                    217 ;driver.c:124: printf ("+Full disk mode\r\n");
      0000D1 21rF9r00         [10]  218 	ld	hl, #___str_11
      0000D4 E5               [11]  219 	push	hl
      0000D5 CDr00r00         [17]  220 	call	_puts
      0000D8 F1               [10]  221 	pop	af
                                    222 ;driver.c:125: break;
      0000D9 C9               [10]  223 	ret
                                    224 ;driver.c:126: default:
      0000DA                        225 00103$:
                                    226 ;driver.c:127: printf ("+Using floppy disk\r\n");
      0000DA 21r0Ar01         [10]  227 	ld	hl, #___str_13
      0000DD E5               [11]  228 	push	hl
      0000DE CDr00r00         [17]  229 	call	_puts
      0000E1 F1               [10]  230 	pop	af
                                    231 ;driver.c:129: }   
                                    232 ;driver.c:130: }
      0000E2 C9               [10]  233 	ret
      0000E3                        234 ___str_7:
      0000E3 2F                     235 	.ascii "/"
      0000E4 00                     236 	.db 0x00
      0000E5                        237 ___str_9:
      0000E5 2B 4F 70 65 6E 65 64   238 	.ascii "+Opened disk image"
             20 64 69 73 6B 20 69
             6D 61 67 65
      0000F7 0D                     239 	.db 0x0d
      0000F8 00                     240 	.db 0x00
      0000F9                        241 ___str_11:
      0000F9 2B 46 75 6C 6C 20 64   242 	.ascii "+Full disk mode"
             69 73 6B 20 6D 6F 64
             65
      000108 0D                     243 	.db 0x0d
      000109 00                     244 	.db 0x00
      00010A                        245 ___str_13:
      00010A 2B 55 73 69 6E 67 20   246 	.ascii "+Using floppy disk"
             66 6C 6F 70 70 79 20
             64 69 73 6B
      00011C 0D                     247 	.db 0x0d
      00011D 00                     248 	.db 0x00
                                    249 ;driver.c:142: uint8_t get_nr_drives_boottime (uint8_t reduced_drive_count,uint8_t dos_mode)
                                    250 ;	---------------------------------
                                    251 ; Function get_nr_drives_boottime
                                    252 ; ---------------------------------
      00011E                        253 _get_nr_drives_boottime::
                                    254 ;driver.c:148: workarea_t* workarea = get_workarea();
      00011E CDr00r00         [17]  255 	call	_get_workarea
                                    256 ;driver.c:149: if (workarea->mount_mode==0)
      000121 7E               [ 7]  257 	ld	a, (hl)
                                    258 ;driver.c:150: return 0;
      000122 B7               [ 4]  259 	or	a,a
      000123 20 02            [12]  260 	jr	NZ, 00102$
      000125 6F               [ 4]  261 	ld	l,a
      000126 C9               [10]  262 	ret
      000127                        263 00102$:
                                    264 ;driver.c:152: return 1; // 1 drive requested
      000127 2E 01            [ 7]  265 	ld	l, #0x01
                                    266 ;driver.c:153: }
      000129 C9               [10]  267 	ret
                                    268 ;driver.c:165: uint16_t get_drive_config (uint8_t relative_drive_number,uint8_t dos_mode)
                                    269 ;	---------------------------------
                                    270 ; Function get_drive_config
                                    271 ; ---------------------------------
      00012A                        272 _get_drive_config::
                                    273 ;driver.c:171: return 0x0101; // device 1, lun 1
      00012A 21 01 01         [10]  274 	ld	hl, #0x0101
                                    275 ;driver.c:172: }
      00012D C9               [10]  276 	ret
                                    277 ;driver.c:210: uint8_t get_lun_info (uint8_t nr_lun,uint8_t nr_device,luninfo_t* luninfo)
                                    278 ;	---------------------------------
                                    279 ; Function get_lun_info
                                    280 ; ---------------------------------
      00012E                        281 _get_lun_info::
                                    282 ;driver.c:216: if (nr_lun==1 && nr_device==1)
      00012E FD 21 02 00      [14]  283 	ld	iy, #2
      000132 FD 39            [15]  284 	add	iy, sp
      000134 FD 7E 00         [19]  285 	ld	a, 0 (iy)
      000137 3D               [ 4]  286 	dec	a
      000138 20 2E            [12]  287 	jr	NZ, 00102$
      00013A FD 7E 01         [19]  288 	ld	a, 1 (iy)
      00013D FD 23            [10]  289 	inc	iy
      00013F 3D               [ 4]  290 	dec	a
      000140 20 26            [12]  291 	jr	NZ, 00102$
                                    292 ;driver.c:218: memset (luninfo,0,sizeof (luninfo_t));
      000142 FD 6E 01         [19]  293 	ld	l, 1 (iy)
      000145 FD 66 02         [19]  294 	ld	h, 2 (iy)
      000148 FD 23            [10]  295 	inc	iy
      00014A 06 0C            [ 7]  296 	ld	b, #0x0c
      00014C                        297 00120$:
      00014C 36 00            [10]  298 	ld	(hl), #0x00
      00014E 23               [ 6]  299 	inc	hl
      00014F 10 FB            [13]  300 	djnz	00120$
                                    301 ;driver.c:220: luninfo->sector_size = 512;
      000151 FD 4E 00         [19]  302 	ld	c, 0 (iy)
      000154 FD 46 01         [19]  303 	ld	b, 1 (iy)
      000157 69               [ 4]  304 	ld	l, c
      000158 60               [ 4]  305 	ld	h, b
      000159 23               [ 6]  306 	inc	hl
      00015A 36 00            [10]  307 	ld	(hl), #0x00
      00015C 23               [ 6]  308 	inc	hl
      00015D 36 02            [10]  309 	ld	(hl), #0x02
                                    310 ;driver.c:222: luninfo->flags = 0b00000001; // ; removable + non-read only + no floppy
      00015F 21 07 00         [10]  311 	ld	hl, #0x0007
      000162 09               [11]  312 	add	hl, bc
      000163 36 01            [10]  313 	ld	(hl), #0x01
                                    314 ;driver.c:226: return 0x00;
      000165 2E 00            [ 7]  315 	ld	l, #0x00
      000167 C9               [10]  316 	ret
      000168                        317 00102$:
                                    318 ;driver.c:229: return 0x01;
      000168 2E 01            [ 7]  319 	ld	l, #0x01
                                    320 ;driver.c:230: }
      00016A C9               [10]  321 	ret
                                    322 ;driver.c:269: uint8_t get_device_info (uint8_t nr_info,uint8_t nr_device,uint8_t* info_buffer)
                                    323 ;	---------------------------------
                                    324 ; Function get_device_info
                                    325 ; ---------------------------------
      00016B                        326 _get_device_info::
      00016B DD E5            [15]  327 	push	ix
      00016D DD 21 00 00      [14]  328 	ld	ix,#0
      000171 DD 39            [15]  329 	add	ix,sp
                                    330 ;driver.c:275: if (nr_device!=1)
      000173 DD 7E 05         [19]  331 	ld	a, 5 (ix)
      000176 3D               [ 4]  332 	dec	a
      000177 28 04            [12]  333 	jr	Z, 00102$
                                    334 ;driver.c:276: return 1;
      000179 2E 01            [ 7]  335 	ld	l, #0x01
      00017B 18 68            [12]  336 	jr	00109$
      00017D                        337 00102$:
                                    338 ;driver.c:278: switch (nr_info)
      00017D DD 7E 04         [19]  339 	ld	a, 4 (ix)
      000180 B7               [ 4]  340 	or	a, a
      000181 28 16            [12]  341 	jr	Z, 00103$
      000183 DD 7E 04         [19]  342 	ld	a, 4 (ix)
      000186 3D               [ 4]  343 	dec	a
      000187 28 23            [12]  344 	jr	Z, 00104$
      000189 DD 7E 04         [19]  345 	ld	a, 4 (ix)
      00018C D6 02            [ 7]  346 	sub	a, #0x02
      00018E 28 2D            [12]  347 	jr	Z, 00105$
      000190 DD 7E 04         [19]  348 	ld	a, 4 (ix)
      000193 D6 03            [ 7]  349 	sub	a, #0x03
      000195 28 37            [12]  350 	jr	Z, 00106$
      000197 18 46            [12]  351 	jr	00107$
                                    352 ;driver.c:280: case 0: // basic information
      000199                        353 00103$:
                                    354 ;driver.c:281: ((deviceinfo_t*)info_buffer)->nr_luns = 0x01;
      000199 DD 6E 06         [19]  355 	ld	l, 6 (ix)
      00019C DD 66 07         [19]  356 	ld	h, 7 (ix)
      00019F 36 01            [10]  357 	ld	(hl), #0x01
                                    358 ;driver.c:282: ((deviceinfo_t*)info_buffer)->flags = 0x00;
      0001A1 DD 4E 06         [19]  359 	ld	c, 6 (ix)
      0001A4 DD 46 07         [19]  360 	ld	b, 7 (ix)
      0001A7 03               [ 6]  361 	inc	bc
      0001A8 AF               [ 4]  362 	xor	a, a
      0001A9 02               [ 7]  363 	ld	(bc), a
                                    364 ;driver.c:283: break;
      0001AA 18 37            [12]  365 	jr	00108$
                                    366 ;driver.c:284: case 1: // Manufacturer name string
      0001AC                        367 00104$:
                                    368 ;driver.c:285: strcpy ((char*)info_buffer,"S0urceror");
      0001AC DD 5E 06         [19]  369 	ld	e, 6 (ix)
      0001AF DD 56 07         [19]  370 	ld	d, 7 (ix)
      0001B2 21rE8r01         [10]  371 	ld	hl, #___str_14
      0001B5 AF               [ 4]  372 	xor	a, a
      0001B6                        373 00141$:
      0001B6 BE               [ 7]  374 	cp	a, (hl)
      0001B7 ED A0            [16]  375 	ldi
      0001B9 20 FB            [12]  376 	jr	NZ, 00141$
                                    377 ;driver.c:286: break;
      0001BB 18 26            [12]  378 	jr	00108$
                                    379 ;driver.c:287: case 2: // Device name string
      0001BD                        380 00105$:
                                    381 ;driver.c:288: strcpy ((char*)info_buffer,"MSXUSBNext");
      0001BD DD 5E 06         [19]  382 	ld	e, 6 (ix)
      0001C0 DD 56 07         [19]  383 	ld	d, 7 (ix)
      0001C3 21rF2r01         [10]  384 	ld	hl, #___str_15
      0001C6 AF               [ 4]  385 	xor	a, a
      0001C7                        386 00142$:
      0001C7 BE               [ 7]  387 	cp	a, (hl)
      0001C8 ED A0            [16]  388 	ldi
      0001CA 20 FB            [12]  389 	jr	NZ, 00142$
                                    390 ;driver.c:289: break;
      0001CC 18 15            [12]  391 	jr	00108$
                                    392 ;driver.c:290: case 3: // Serial number string
      0001CE                        393 00106$:
                                    394 ;driver.c:291: strcpy ((char*)info_buffer,"0000");
      0001CE DD 5E 06         [19]  395 	ld	e, 6 (ix)
      0001D1 DD 56 07         [19]  396 	ld	d, 7 (ix)
      0001D4 21rFDr01         [10]  397 	ld	hl, #___str_16
      0001D7 AF               [ 4]  398 	xor	a, a
      0001D8                        399 00143$:
      0001D8 BE               [ 7]  400 	cp	a, (hl)
      0001D9 ED A0            [16]  401 	ldi
      0001DB 20 FB            [12]  402 	jr	NZ, 00143$
                                    403 ;driver.c:292: break;
      0001DD 18 04            [12]  404 	jr	00108$
                                    405 ;driver.c:293: default:
      0001DF                        406 00107$:
                                    407 ;driver.c:294: return 2;
      0001DF 2E 02            [ 7]  408 	ld	l, #0x02
      0001E1 18 02            [12]  409 	jr	00109$
                                    410 ;driver.c:296: }
      0001E3                        411 00108$:
                                    412 ;driver.c:297: return 0;
      0001E3 2E 00            [ 7]  413 	ld	l, #0x00
      0001E5                        414 00109$:
                                    415 ;driver.c:298: }
      0001E5 DD E1            [14]  416 	pop	ix
      0001E7 C9               [10]  417 	ret
      0001E8                        418 ___str_14:
      0001E8 53 30 75 72 63 65 72   419 	.ascii "S0urceror"
             6F 72
      0001F1 00                     420 	.db 0x00
      0001F2                        421 ___str_15:
      0001F2 4D 53 58 55 53 42 4E   422 	.ascii "MSXUSBNext"
             65 78 74
      0001FC 00                     423 	.db 0x00
      0001FD                        424 ___str_16:
      0001FD 30 30 30 30            425 	.ascii "0000"
      000201 00                     426 	.db 0x00
                                    427 ;driver.c:329: uint8_t get_device_status (uint8_t nr_lun,uint8_t nr_device)
                                    428 ;	---------------------------------
                                    429 ; Function get_device_status
                                    430 ; ---------------------------------
      000202                        431 _get_device_status::
                                    432 ;driver.c:335: if (nr_device!=1 || nr_lun!=1)
      000202 FD 21 03 00      [14]  433 	ld	iy, #3
      000206 FD 39            [15]  434 	add	iy, sp
      000208 FD 7E 00         [19]  435 	ld	a, 0 (iy)
      00020B 3D               [ 4]  436 	dec	a
      00020C 20 06            [12]  437 	jr	NZ, 00101$
      00020E FD 7E FF         [19]  438 	ld	a, -1 (iy)
      000211 3D               [ 4]  439 	dec	a
      000212 28 03            [12]  440 	jr	Z, 00102$
      000214                        441 00101$:
                                    442 ;driver.c:336: return 0;
      000214 2E 00            [ 7]  443 	ld	l, #0x00
      000216 C9               [10]  444 	ret
      000217                        445 00102$:
                                    446 ;driver.c:338: workarea_t* workarea = get_workarea();
      000217 CDr00r00         [17]  447 	call	_get_workarea
                                    448 ;driver.c:339: if (workarea->disk_change)
      00021A 23               [ 6]  449 	inc	hl
      00021B CB 46            [12]  450 	bit	0, (hl)
                                    451 ;driver.c:340: return 2;
                                    452 ;driver.c:342: return 1;
      00021D 2E 02            [ 7]  453 	ld	l, #0x02
      00021F C0               [11]  454 	ret	NZ
      000220 2E 01            [ 7]  455 	ld	l, #0x01
                                    456 ;driver.c:343: }
      000222 C9               [10]  457 	ret
                                    458 ;driver.c:345: void caps_flash () __z88dk_fastcall __naked
                                    459 ;	---------------------------------
                                    460 ; Function caps_flash
                                    461 ; ---------------------------------
      000223                        462 _caps_flash::
                                    463 ;driver.c:360: __endasm;
                                    464 ;	CAPS FLASH
      000223 DB AA            [11]  465 	in	a, (0xaa)
      000225 CB 77            [ 8]  466 	bit	6,a
      000227 28 04            [12]  467 	jr	z, _CAPS_FLASH_ON
      000229 CB B7            [ 8]  468 	res	6,a
      00022B 18 02            [12]  469 	jr	_CAPS_FLASH
      00022D                        470 	_CAPS_FLASH_ON:
      00022D CB F7            [ 8]  471 	set	6,a
      00022F                        472 	_CAPS_FLASH:
      00022F D3 AA            [11]  473 	out	(0xaa),a
      000231 C9               [10]  474 	ret
                                    475 ;
                                    476 ;driver.c:361: }
                                    477 ;driver.c:388: diskerror_t read_or_write_sector (uint8_t read_or_write_flag, uint8_t nr_device, uint8_t nr_lun, uint8_t nr_sectors, uint32_t* sector, uint8_t* sector_buffer)
                                    478 ;	---------------------------------
                                    479 ; Function read_or_write_sector
                                    480 ; ---------------------------------
      000232                        481 _read_or_write_sector::
      000232 DD E5            [15]  482 	push	ix
      000234 DD 21 00 00      [14]  483 	ld	ix,#0
      000238 DD 39            [15]  484 	add	ix,sp
                                    485 ;driver.c:397: workarea_t* workarea = get_workarea();
      00023A CDr00r00         [17]  486 	call	_get_workarea
                                    487 ;driver.c:400: if (nr_device!=1 || nr_lun!=1)
      00023D DD 7E 05         [19]  488 	ld	a, 5 (ix)
      000240 3D               [ 4]  489 	dec	a
      000241 20 06            [12]  490 	jr	NZ, 00101$
      000243 DD 7E 06         [19]  491 	ld	a, 6 (ix)
      000246 3D               [ 4]  492 	dec	a
      000247 28 04            [12]  493 	jr	Z, 00102$
      000249                        494 00101$:
                                    495 ;driver.c:401: return IDEVL;
      000249 2E B5            [ 7]  496 	ld	l, #0xb5
      00024B 18 5E            [12]  497 	jr	00111$
      00024D                        498 00102$:
                                    499 ;driver.c:403: caps_flash ();
      00024D E5               [11]  500 	push	hl
      00024E CDr23r02         [17]  501 	call	_caps_flash
      000251 E1               [10]  502 	pop	hl
                                    503 ;driver.c:405: if (workarea->mount_mode==2)
      000252 5E               [ 7]  504 	ld	e, (hl)
                                    505 ;driver.c:409: if (!read_write_file_sectors (read_or_write_flag & Z80_CARRY_MASK,nr_sectors,sector,sector_buffer))
      000253 DD 7E 04         [19]  506 	ld	a, 4 (ix)
      000256 E6 01            [ 7]  507 	and	a, #0x01
      000258 4F               [ 4]  508 	ld	c, a
                                    509 ;driver.c:405: if (workarea->mount_mode==2)
      000259 7B               [ 4]  510 	ld	a, e
      00025A D6 02            [ 7]  511 	sub	a, #0x02
      00025C 20 24            [12]  512 	jr	NZ, 00109$
                                    513 ;driver.c:409: if (!read_write_file_sectors (read_or_write_flag & Z80_CARRY_MASK,nr_sectors,sector,sector_buffer))
      00025E 79               [ 4]  514 	ld	a, c
      00025F DD 6E 0A         [19]  515 	ld	l, 10 (ix)
      000262 DD 66 0B         [19]  516 	ld	h, 11 (ix)
      000265 E5               [11]  517 	push	hl
      000266 DD 6E 08         [19]  518 	ld	l, 8 (ix)
      000269 DD 66 09         [19]  519 	ld	h, 9 (ix)
      00026C E5               [11]  520 	push	hl
      00026D DD 66 07         [19]  521 	ld	h, 7 (ix)
      000270 E5               [11]  522 	push	hl
      000271 33               [ 6]  523 	inc	sp
      000272 F5               [11]  524 	push	af
      000273 33               [ 6]  525 	inc	sp
      000274 CDr00r00         [17]  526 	call	_read_write_file_sectors
      000277 F1               [10]  527 	pop	af
      000278 F1               [10]  528 	pop	af
      000279 F1               [10]  529 	pop	af
      00027A CB 45            [ 8]  530 	bit	0, l
      00027C 20 28            [12]  531 	jr	NZ, 00110$
                                    532 ;driver.c:410: return RNF;
      00027E 2E F9            [ 7]  533 	ld	l, #0xf9
      000280 18 29            [12]  534 	jr	00111$
      000282                        535 00109$:
                                    536 ;driver.c:415: if (!read_write_disk_sectors (read_or_write_flag & Z80_CARRY_MASK,nr_sectors,sector,sector_buffer))
      000282 79               [ 4]  537 	ld	a, c
      000283 DD 6E 0A         [19]  538 	ld	l, 10 (ix)
      000286 DD 66 0B         [19]  539 	ld	h, 11 (ix)
      000289 E5               [11]  540 	push	hl
      00028A DD 6E 08         [19]  541 	ld	l, 8 (ix)
      00028D DD 66 09         [19]  542 	ld	h, 9 (ix)
      000290 E5               [11]  543 	push	hl
      000291 DD 66 07         [19]  544 	ld	h, 7 (ix)
      000294 E5               [11]  545 	push	hl
      000295 33               [ 6]  546 	inc	sp
      000296 F5               [11]  547 	push	af
      000297 33               [ 6]  548 	inc	sp
      000298 CDr00r00         [17]  549 	call	_read_write_disk_sectors
      00029B F1               [10]  550 	pop	af
      00029C F1               [10]  551 	pop	af
      00029D F1               [10]  552 	pop	af
      00029E CB 45            [ 8]  553 	bit	0, l
      0002A0 20 04            [12]  554 	jr	NZ, 00110$
                                    555 ;driver.c:416: return RNF;
      0002A2 2E F9            [ 7]  556 	ld	l, #0xf9
      0002A4 18 05            [12]  557 	jr	00111$
      0002A6                        558 00110$:
                                    559 ;driver.c:419: caps_flash ();
      0002A6 CDr23r02         [17]  560 	call	_caps_flash
                                    561 ;driver.c:421: return OK;
      0002A9 2E 00            [ 7]  562 	ld	l, #0x00
      0002AB                        563 00111$:
                                    564 ;driver.c:422: }
      0002AB DD E1            [14]  565 	pop	ix
      0002AD C9               [10]  566 	ret
                                    567 	.area _CODE
                                    568 	.area _INITIALIZER
                                    569 	.area _CABS (ABS)
